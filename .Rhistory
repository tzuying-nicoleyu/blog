abline(lm(ran_y~ran_x))
#Assume the "True Relationship" is Y = 2 + 3X + e, the true relationship is probably not linear, there may be other variables that cause variation in Y. In addition, we typically assume that the error term is independent of X.
set.seed(100)
x <- runif(100, -2, 2)
e <- rnorm(100, mean = 0, sd = 3) # The error
Y <- x+e # Y
# The graph:
plot(x, Y)
abline(2, 3, col = 'red')
abline(lm(Y~x), col = "blue")
# Running other 10 linear lines, each sample has 100 random x
ran_x = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_x[i, x] =  runif(1, -2, 2)
}
}
ran_e = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_e[i, x] =  rnorm(1, mean = 0, sd = 3)
}
}
ran_y = ran_x + ran_e
abline(lm(ran_y~ran_x))
#Assume the "True Relationship" is Y = 2 + 3X + e, the true relationship is probably not linear, there may be other variables that cause variation in Y. In addition, we typically assume that the error term is independent of X.
set.seed(100)
x <- runif(100, -2, 2)
e <- rnorm(100, mean = 0, sd = 3) # The error
Y <-(2 + 3* x)+e # Y
# The graph:
plot(x, Y)
abline(2, 3, col = 'red')
abline(lm(Y~x), col = "blue")
# Running other 10 linear lines, each sample has 100 random x
ran_x = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_x[i, x] =  runif(1, -2, 2)
}
}
ran_e = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_e[i, x] =  rnorm(1, mean = 0, sd = 3)
}
}
ran_y =2 + 3 ran_x + ran_e
#Assume the "True Relationship" is Y = 2 + 3X + e, the true relationship is probably not linear, there may be other variables that cause variation in Y. In addition, we typically assume that the error term is independent of X.
set.seed(100)
x <- runif(100, -2, 2)
e <- rnorm(100, mean = 0, sd = 3) # The error
Y <-(2 + 3* x)+e # Y
# The graph:
plot(x, Y)
abline(2, 3, col = 'red')
abline(lm(Y~x), col = "blue")
# Running other 10 linear lines, each sample has 100 random x
ran_x = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_x[i, x] =  runif(1, -2, 2)
}
}
ran_e = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_e[i, x] =  rnorm(1, mean = 0, sd = 3)
}
}
ran_y =(2 + 3*ran_x )+ ran_e
#Assume the "True Relationship" is Y = 2 + 3X + e, the true relationship is probably not linear, there may be other variables that cause variation in Y. In addition, we typically assume that the error term is independent of X.
set.seed(100)
x <- runif(100, -2, 2)
e <- rnorm(100, mean = 0, sd = 3) # The error
Y <-(2 + 3* x)+e # Y
# The graph:
plot(x, Y)
abline(2, 3, col = 'red')
abline(lm(Y~x), col = "light blue")
# Running other 10 linear lines, each sample has 100 random x
ran_x = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_x[i, x] =  runif(1, -2, 2)
}
}
ran_e = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_e[i, x] =  rnorm(1, mean = 0, sd = 3)
}
}
ran_y =(2 + 3*ran_x )+ ran_e
for (i in 1:10){
lm(ran_y[i,] ~ ran_x[i, ])
}
#Assume the "True Relationship" is Y = 2 + 3X + e, the true relationship is probably not linear, there may be other variables that cause variation in Y. In addition, we typically assume that the error term is independent of X.
set.seed(100)
x <- runif(100, -2, 2)
e <- rnorm(100, mean = 0, sd = 3) # The error
Y <-(2 + 3* x)+e # Y
# The graph:
plot(x, Y)
abline(2, 3, col = 'red')
abline(lm(Y~x), col = "blue")
# Running other 10 linear lines, each sample has 100 random x
ran_x = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_x[i, x] =  runif(1, -2, 2)
}
}
ran_e = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_e[i, x] =  rnorm(1, mean = 0, sd = 3)
}
}
ran_y =(2 + 3*ran_x )+ ran_e
for (i in 1:10){
lm(ran_y[i,] ~ ran_x[i, ])
}
#Assume the "True Relationship" is Y = 2 + 3X + e, the true relationship is probably not linear, there may be other variables that cause variation in Y. In addition, we typically assume that the error term is independent of X.
set.seed(100)
x <- runif(100, -2, 2)
e <- rnorm(100, mean = 0, sd = 3) # The error
Y <-(2 + 3* x)+e # Y
# The graph:
plot(x, Y)
abline(2, 3, col = 'red')
abline(lm(Y~x), col = "blue")
# Running other 10 linear lines, each sample has 100 random x
ran_x = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_x[i, x] =  runif(1, -2, 2)
}
}
ran_e = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_e[i, x] =  rnorm(1, mean = 0, sd = 3)
}
}
ran_y =(2 + 3*ran_x )+ ran_e
for (i in 1:10){
abline(lm(ran_y[i,] ~ ran_x[i, ]), col = "light blue")
}
#Assume the "True Relationship" is Y = 2 + 3X + e, the true relationship is probably not linear, there may be other variables that cause variation in Y. In addition, we typically assume that the error term is independent of X.
set.seed(100)
x <- runif(100, -2, 2)
e <- rnorm(100, mean = 0, sd = 3) # The error
Y <-(2 + 3* x)+e # Y
# Running other 10 linear lines, each sample has 100 random x
ran_x = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_x[i, x] =  runif(1, -2, 2)
}
}
ran_e = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_e[i, x] =  rnorm(1, mean = 0, sd = 3)
}
}
ran_y =(2 + 3*ran_x )+ ran_e
# The graph:
plot(x, Y)
#Assume the "True Relationship" is Y = 2 + 3X + e, the true relationship is probably not linear, there may be other variables that cause variation in Y. In addition, we typically assume that the error term is independent of X.
set.seed(100)
x <- runif(100, -2, 2)
e <- rnorm(100, mean = 0, sd = 3) # The error
Y <-(2 + 3* x)+e # Y
# Running other 10 linear lines, each sample has 100 random x
ran_x = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_x[i, x] =  runif(1, -2, 2)
}
}
ran_e = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_e[i, x] =  rnorm(1, mean = 0, sd = 3)
}
}
ran_y =(2 + 3*ran_x )+ ran_e
# The graph:
plot(x, Y)
#Assume the "True Relationship" is Y = 2 + 3X + e, the true relationship is probably not linear, there may be other variables that cause variation in Y. In addition, we typically assume that the error term is independent of X.
set.seed(100)
x0 <- runif(100, -2, 2)
e <- rnorm(100, mean = 0, sd = 3) # The error
Y <-(2 + 3* x0)+e # Y
# Running other 10 linear lines, each sample has 100 random x
ran_x = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_x[i, x] =  runif(1, -2, 2)
}
}
ran_e = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_e[i, x] =  rnorm(1, mean = 0, sd = 3)
}
}
ran_y =(2 + 3*ran_x )+ ran_e
# The graph:
plot(x0, Y)
for (i in 1:10){
abline(lm(ran_y[i,] ~ ran_x[i, ]), col = "light blue")
}
abline(2, 3, col = 'red')
abline(lm(Y~x0), col = "blue")
?abline()
#Assume the "True Relationship" is Y = 2 + 3X + e, the true relationship is probably not linear, there may be other variables that cause variation in Y. In addition, we typically assume that the error term is independent of X.
set.seed(100)
x <- runif(100, -2, 2)
e <- rnorm(100, mean = 0, sd = 3) # The error
Y <-(2 + 3* x)+e # Y
# The graph:
plot(x, Y)
abline(2, 3, col = 'red')
abline(lm(Y~x), col = "blue")
# Running other 10 linear lines, each sample has 100 random x
ran_x = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_x[i, x] =  runif(1, -2, 2)
}
}
ran_e = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_e[i, x] =  rnorm(1, mean = 0, sd = 3)
}
}
ran_y =(2 + 3*ran_x )+ ran_e
for (i in 1:10){
abline(lm(ran_y[i,] ~ ran_x[i, ]), col = "light blue", lwd = 0.1)
}
#Assume the "True Relationship" is Y = 2 + 3X + e, the true relationship is probably not linear, there may be other variables that cause variation in Y. In addition, we typically assume that the error term is independent of X.
set.seed(100)
x <- runif(100, -2, 2)
e <- rnorm(100, mean = 0, sd = 3) # The error
Y <-(2 + 3* x)+e # Y
# The graph:
plot(x, Y)
abline(2, 3, col = 'red', lwd = 3)
abline(lm(Y~x), col = "blue")
# Running other 10 linear lines, each sample has 100 random x
ran_x = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_x[i, x] =  runif(1, -2, 2)
}
}
ran_e = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_e[i, x] =  rnorm(1, mean = 0, sd = 3)
}
}
ran_y =(2 + 3*ran_x )+ ran_e
for (i in 1:10){
abline(lm(ran_y[i,] ~ ran_x[i, ]), col = "light blue", lwd = 0.2)
}
#Assume the "True Relationship" is Y = 2 + 3X + e, the true relationship is probably not linear, there may be other variables that cause variation in Y. In addition, we typically assume that the error term is independent of X.
set.seed(100)
x <- runif(100, -2, 2)
e <- rnorm(100, mean = 0, sd = 3) # The error
Y <-(2 + 3* x)+e # Y
# The graph:
plot(x, Y)
abline(2, 3, col = 'red', lwd = 3)
abline(lm(Y~x), col = "blue")
# Running other 10 linear lines, each sample has 100 random x
ran_x = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_x[i, x] =  runif(1, -2, 2)
}
}
ran_e = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_e[i, x] =  rnorm(1, mean = 0, sd = 3)
}
}
ran_y =(2 + 3*ran_x )+ ran_e
# The graph
plot(abline(2, 3))
#Assume the "True Relationship" is Y = 2 + 3X + e, the true relationship is probably not linear, there may be other variables that cause variation in Y. In addition, we typically assume that the error term is independent of X.
set.seed(100)
x <- runif(100, -2, 2)
e <- rnorm(100, mean = 0, sd = 3) # The error
Y <-(2 + 3* x)+e # Y
# The graph:
plot(x, Y)
abline(2, 3, col = 'red', lwd = 3)
abline(lm(Y~x), col = "blue")
# Running other 10 linear lines, each sample has 100 random x
ran_x = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_x[i, x] =  runif(1, -2, 2)
}
}
ran_e = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_e[i, x] =  rnorm(1, mean = 0, sd = 3)
}
}
ran_y =(2 + 3*ran_x )+ ran_e
for (i in 1:10){
abline(lm(ran_y[i,] ~ ran_x[i, ]), col = "light blue", lwd = 0.2)
}
#Assume the "True Relationship" is Y = 2 + 3X + e, the true relationship is probably not linear, there may be other variables that cause variation in Y. In addition, we typically assume that the error term is independent of X.
set.seed(100)
x0 <- runif(100, -2, 2)
e <- rnorm(100, mean = 0, sd = 3) # The error
Y <-(2 + 3* x0)+e # Y
# The graph:
plot(x0, Y)
abline(2, 3, col = 'red', lwd = 3)
abline(lm(Y~x), col = "blue")
#Assume the "True Relationship" is Y = 2 + 3X + e, the true relationship is probably not linear, there may be other variables that cause variation in Y. In addition, we typically assume that the error term is independent of X.
set.seed(100)
x0 <- runif(100, -2, 2)
e <- rnorm(100, mean = 0, sd = 3) # The error
Y <-(2 + 3* x0)+e # Y
# The graph:
plot(x0, Y)
abline(2, 3, col = 'red', lwd = 3)
abline(lm(Y~x0), col = "blue")
# Running other 10 linear lines, each sample has 100 random x
ran_x = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_x[i, x] =  runif(1, -2, 2)
}
}
ran_e = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_e[i, x] =  rnorm(1, mean = 0, sd = 3)
}
}
ran_y =(2 + 3*ran_x )+ ran_e
# The graph
plot(x0, Y, type = "n")
abline(2, 3, col = 'red', lwd = 3)
abline(lm(Y~x), col = "blue")
#Assume the "True Relationship" is Y = 2 + 3X + e, the true relationship is probably not linear, there may be other variables that cause variation in Y. In addition, we typically assume that the error term is independent of X.
set.seed(100)
x0 <- runif(100, -2, 2)
e <- rnorm(100, mean = 0, sd = 3) # The error
Y <-(2 + 3* x0)+e # Y
# The graph:
plot(x0, Y)
abline(2, 3, col = 'red', lwd = 3)
abline(lm(Y~x0), col = "blue")
# Running other 10 linear lines, each sample has 100 random x
ran_x = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_x[i, x] =  runif(1, -2, 2)
}
}
ran_e = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_e[i, x] =  rnorm(1, mean = 0, sd = 3)
}
}
ran_y =(2 + 3*ran_x )+ ran_e
# The graph
plot(x0, Y, type = "n")
abline(2, 3, col = 'red', lwd = 3)
abline(lm(Y~x0), col = "blue")
for (i in 1:10){
abline(lm(ran_y[i,] ~ ran_x[i, ]), col = "light blue", lwd = 0.2)
}
#Assume the "True Relationship" is Y = 2 + 3X + e, the true relationship is probably not linear, there may be other variables that cause variation in Y. In addition, we typically assume that the error term is independent of X.
set.seed(100)
x0 <- runif(100, -2, 2)
e <- rnorm(100, mean = 0, sd = 3) # The error
Y <-(2 + 3* x0)+e # Y
# The graph:
plot(x0, Y)
abline(2, 3, col = 'red', lwd = 3)
abline(lm(Y~x0), col = "blue")
# Running other 10 linear lines, each sample has 100 random x
ran_x = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_x[i, x] =  runif(1, -2, 2)
}
}
ran_e = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_e[i, x] =  rnorm(1, mean = 0, sd = 3)
}
}
ran_y =(2 + 3*ran_x )+ ran_e
# The graph
plot(x0, Y, type = "n")
abline(2, 3, col = 'red', lwd = 3)
abline(lm(Y~x0), col = "blue", lwd = 3)
for (i in 1:10){
abline(lm(ran_y[i,] ~ ran_x[i, ]), col = "light blue", lwd = 0.5)
}
?par()
#Assume the "True Relationship" is Y = 2 + 3X + e, the true relationship is probably not linear, there may be other variables that cause variation in Y. In addition, we typically assume that the error term is independent of X.
set.seed(100)
x0 <- runif(100, -2, 2)
e <- rnorm(100, mean = 0, sd = 3) # The error
Y <-(2 + 3* x0)+e # Y
par(mfrow = c(1, 2))
# The graph:
plot(x0, Y)
abline(2, 3, col = 'red', lwd = 3)
abline(lm(Y~x0), col = "blue")
# Running other 10 linear lines, each sample has 100 random x
ran_x = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_x[i, x] =  runif(1, -2, 2)
}
}
ran_e = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_e[i, x] =  rnorm(1, mean = 0, sd = 3)
}
}
ran_y =(2 + 3*ran_x )+ ran_e
# The graph
plot(x0, Y, type = "n")
abline(2, 3, col = 'red', lwd = 3)
abline(lm(Y~x0), col = "blue", lwd = 3)
for (i in 1:10){
abline(lm(ran_y[i,] ~ ran_x[i, ]), col = "light blue", lwd = 0.5)
}
#Assume the "True Relationship" is Y = 2 + 3X + e, the true relationship is probably not linear, there may be other variables that cause variation in Y. In addition, we typically assume that the error term is independent of X.
set.seed(100)
x0 <- runif(100, -2, 2)
e <- rnorm(100, mean = 0, sd = 3) # The error
Y <-(2 + 3* x0)+e # Y
par(mfrow = c(1, 2))
# The graph:
plot(x0, Y)
abline(2, 3, col = 'red', lwd = 3)
abline(lm(Y~x0), col = "blue")
# Running other 10 linear lines, each sample has 100 random x
ran_x = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_x[i, x] =  runif(1, -2, 2)
}
}
ran_e = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_e[i, x] =  rnorm(1, mean = 0, sd = 3)
}
}
ran_y =(2 + 3*ran_x )+ ran_e
# The graph
plot(x0, Y, type = "n")
abline(2, 3, col = 'red', lwd = 2)
abline(lm(Y~x0), col = "blue", lwd = 2)
for (i in 1:10){
abline(lm(ran_y[i,] ~ ran_x[i, ]), col = "light blue", lwd = 0.4)
}
#Assume the "True Relationship" is Y = 2 + 3X + e, the true relationship is probably not linear, there may be other variables that cause variation in Y. In addition, we typically assume that the error term is independent of X.
set.seed(100)
x0 <- runif(100, -2, 2)
e <- rnorm(100, mean = 0, sd = 3) # The error
Y <-(2 + 3* x0)+e # Y
par(mfrow = c(1, 2))
# The graph:
plot(x0, Y)
abline(2, 3, col = 'red')
abline(lm(Y~x0), col = "blue")
# Running other 10 linear lines, each sample has 100 random x
ran_x = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_x[i, x] =  runif(1, -2, 2)
}
}
ran_e = array( dim = c(10, 100))
for(i in 1:10){
for(x in 1:100){
ran_e[i, x] =  rnorm(1, mean = 0, sd = 3)
}
}
ran_y =(2 + 3*ran_x )+ ran_e
# The graph
plot(x0, Y, type = "n")
abline(2, 3, col = 'red', lwd = 2)
abline(lm(Y~x0), col = "blue", lwd = 2)
for (i in 1:10){
abline(lm(ran_y[i,] ~ ran_x[i, ]), col = "light blue", lwd = 0.4)
}
lm(Y~x0)
